{"ast":null,"code":"var _jsxFileName = \"/Users/jordirocasoler/Desktop/Ironhack - React/netflix/src/helpers/routes.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function IsUserRedirect(_ref) {\n  let {\n    user,\n    loggedInPath,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => {\n      if (!user) {\n        return children;\n      }\n\n      if (user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: loggedInPath\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 18\n        }, this);\n      }\n\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = IsUserRedirect;\nexport function ProtectedRoute(_ref2) {\n  let {\n    user,\n    children,\n    ...rest\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref3 => {\n      let {\n        location\n      } = _ref3;\n\n      if (user) {\n        return children;\n      }\n\n      if (!user) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"signin\",\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      }\n\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IsUserRedirect\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/jordirocasoler/Desktop/Ironhack - React/netflix/src/helpers/routes.js"],"names":["React","Route","Redirect","IsUserRedirect","user","loggedInPath","children","rest","pathname","ProtectedRoute","location","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,OAAO,SAASC,cAAT,OAAmE;AAAA,MAA3C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,QAAtB;AAAgC,OAAGC;AAAnC,GAA2C;AACxE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAE,MAAM;AACZ,UAAI,CAACH,IAAL,EAAW;AACT,eAAOE,QAAP;AACD;;AAED,UAAIF,IAAJ,EAAU;AACR,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEI,YAAAA,QAAQ,EAAEH;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,aAAO,IAAP;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KAhBeF,c;AAkBhB,OAAO,SAASM,cAAT,QAAiD;AAAA,MAAzB;AAACL,IAAAA,IAAD;AAAME,IAAAA,QAAN;AAAgB,OAAGC;AAAnB,GAAyB;AACpD,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAE,SAAc;AAAA,UAAb;AAACG,QAAAA;AAAD,OAAa;;AAClB,UAAGN,IAAH,EAAQ;AACJ,eAAOE,QAAP;AACH;;AACD,UAAG,CAACF,IAAJ,EAAS;AACL,4BACI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACI,YAAAA,QAAQ,EAAC,QAAV;AACdG,YAAAA,KAAK,EAAC;AAACC,cAAAA,IAAI,EAACF;AAAN;AADQ;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;;AACD,aAAO,IAAP;AACH;AAfL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;MApBeD,c","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (!user) {\n          return children;\n        }\n\n        if (user) {\n          return <Redirect to={{ pathname: loggedInPath }} />;\n        }\n        return null;\n      }}\n    />\n  );\n}\n\nexport function ProtectedRoute({user,children, ...rest}){\n    return(\n        <Route \n            {...rest}\n            render={({location})=>{\n                if(user){\n                    return children\n                }\n                if(!user){\n                    return(\n                        <Redirect to={{pathname:\"signin\",\n                        state:{from:location},\n                        }}\n                        />\n                    )\n                }\n                return null;\n            }}\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}