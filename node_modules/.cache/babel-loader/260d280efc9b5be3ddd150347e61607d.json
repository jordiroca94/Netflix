{"ast":null,"code":"var _jsxFileName = \"/Users/jordirocasoler/Desktop/netflix/src/helpers/routes.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport function IsUserRedirect(_ref) {\n  let {\n    user,\n    loggedInPath,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: () => {\n      if (!user) {\n        return children;\n      }\n\n      if (user) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: loggedInPath\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 18\n          }\n        });\n      }\n\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }));\n}\n_c = IsUserRedirect;\nexport function protectedRoute(_ref2) {\n  let {\n    user,\n    children,\n    ...rest\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: _ref3 => {\n      let {\n        location\n      } = _ref3;\n\n      if (user) {\n        return children;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"IsUserRedirect\");","map":{"version":3,"sources":["/Users/jordirocasoler/Desktop/netflix/src/helpers/routes.js"],"names":["React","Route","Redirect","IsUserRedirect","user","loggedInPath","children","rest","pathname","protectedRoute","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAO,SAASC,cAAT,OAAmE;AAAA,MAA3C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,QAAtB;AAAgC,OAAGC;AAAnC,GAA2C;AACxE,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,MAAM;AACZ,UAAI,CAACH,IAAL,EAAW;AACT,eAAOE,QAAP;AACD;;AAED,UAAIF,IAAJ,EAAU;AACR,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEI,YAAAA,QAAQ,EAAEH;AAAZ,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO,IAAP;AACD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAeD;KAhBeF,c;AAkBhB,OAAO,SAASM,cAAT,QAAiD;AAAA,MAAzB;AAACL,IAAAA,IAAD;AAAME,IAAAA,QAAN;AAAgB,OAAGC;AAAnB,GAAyB;AACpD,sBACI,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EAAE,SAAc;AAAA,UAAb;AAACG,QAAAA;AAAD,OAAa;;AAClB,UAAGN,IAAH,EAAQ;AACJ,eAAOE,QAAP;AACH;AAEJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAWH","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (!user) {\n          return children;\n        }\n\n        if (user) {\n          return <Redirect to={{ pathname: loggedInPath }} />;\n        }\n        return null;\n      }}\n    />\n  );\n}\n\nexport function protectedRoute({user,children, ...rest}){\n    return(\n        <Route \n            {...rest}\n            render={({location})=>{\n                if(user){\n                    return children\n                }\n                \n            }}\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}