{"ast":null,"code":"var _jsxFileName = \"/Users/jordirocasoler/Desktop/netflix/src/containers/browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { SelectProfileContainer } from \"./profiles\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { Header, Loading } from \"../components\";\nexport function BrowseContainer(_ref) {\n  _s();\n\n  let {\n    slides\n  } = _ref;\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  return profile.displayName ? /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Loading, {\n    src: user.photoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(Loading.ReleaseBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    src: \"joker1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }\n  }, \"Hello\"))) : /*#__PURE__*/React.createElement(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(BrowseContainer, \"EG5Q2Ud/mJ7z7uEB4RFjmWLwAes=\");\n\n_c = BrowseContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"sources":["/Users/jordirocasoler/Desktop/netflix/src/containers/browse.js"],"names":["React","useState","useContext","SelectProfileContainer","FirebaseContext","useEffect","Header","Loading","BrowseContainer","slides","profile","setProfile","loading","setLoading","firebase","user","auth","currentUser","setTimeout","displayName","photoURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,sBAAT,QAAuC,YAAvC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,MAAT,EAAgBC,OAAhB,QAA+B,eAA/B;AAEA,OAAO,SAASC,eAAT,OAAqC;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAeZ,UAAU,CAACE,eAAD,CAA/B;AACA,QAAMW,IAAI,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,WAAhB,IAA+B,EAA5C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,CAACH,OAAO,CAACS,WAAT,CAJM,CAAT;AAMA,SAAOT,OAAO,CAACS,WAAR,gBACL,0CACCP,OAAO,gBACN,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEG,IAAI,CAACK,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAEH,oBAAC,OAAD,CAAS,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,eAIA,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAArB,CAJA,CADK,gBASL,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAEL,IAA9B;AAAoC,IAAA,UAAU,EAAEJ,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF;AAWD;;GAvBeH,e;;KAAAA,e","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { SelectProfileContainer } from \"./profiles\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { Header,Loading } from \"../components\";\n\nexport function BrowseContainer({ slides }) {\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  const { firebase } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n\n  return profile.displayName ? (\n    <>\n    {loading ? (\n      <Loading src={user.photoURL} />\n    ) : (<Loading.ReleaseBody/>)}\n    <Header src=\"joker1\"><p>Hello</p></Header>\n    \n    </>\n  ) : (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}