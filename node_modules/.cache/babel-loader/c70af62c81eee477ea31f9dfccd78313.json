{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { FirebaseContext } from \"../context/firebase\";\nexport default function useContent(target) {\n  _s();\n\n  const [content, setContent] = useState([]);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    firebase.firestore().collection(target).get().then(snapshot => {\n      const allContent = snapshot.docs.map(contentObj => ({ ...contentObj.data(),\n        docId: contentObj.id\n      }));\n      setContent(allContent);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }, []);\n  return {\n    [target]: content\n  };\n}\n\n_s(useContent, \"d6wqqricGe3/+fMa24L7e8CIcNw=\");","map":{"version":3,"sources":["/Users/jordirocasoler/Desktop/Ironhack - React/netflix/src/hooks/use-content.js"],"names":["useEffect","useState","useContext","FirebaseContext","useContent","target","content","setContent","firebase","firestore","collection","get","then","snapshot","allContent","docs","map","contentObj","data","docId","id","catch","error","console","log","message"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA2B;AAAA;;AACtC,QAAK,CAACC,OAAD,EAASC,UAAT,IAAsBN,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAaN,UAAU,CAACC,eAAD,CAA7B;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,QAAQ,CACPC,SADD,GAECC,UAFD,CAEYL,MAFZ,EAGCM,GAHD,GAICC,IAJD,CAIOC,QAAD,IAAY;AACd,YAAMC,UAAU,GAAED,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,UAAD,KAAe,EAC/C,GAAGA,UAAU,CAACC,IAAX,EAD4C;AAE/CC,QAAAA,KAAK,EAACF,UAAU,CAACG;AAF8B,OAAf,CAAlB,CAAlB;AAIAb,MAAAA,UAAU,CAACO,UAAD,CAAV;AACH,KAVD,EAWCO,KAXD,CAWQC,KAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,KAbD;AAcH,GAfQ,EAeN,EAfM,CAAT;AAgBA,SAAO;AAAC,KAACpB,MAAD,GAASC;AAAV,GAAP;AACH;;GArBuBF,U","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { FirebaseContext } from \"../context/firebase\";\n\nexport default function useContent(target){\n    const[content,setContent]= useState([])\n    const {firebase} = useContext(FirebaseContext)\n\n    useEffect(()=>{\n        firebase\n        .firestore()\n        .collection(target)\n        .get()\n        .then((snapshot)=>{\n            const allContent= snapshot.docs.map((contentObj)=>({\n                ...contentObj.data(), \n                docId:contentObj.id\n            }))\n            setContent(allContent)\n        })\n        .catch((error)=>{\n            console.log(error.message)\n        })\n    }, [])\n    return {[target]:content}\n} "]},"metadata":{},"sourceType":"module"}