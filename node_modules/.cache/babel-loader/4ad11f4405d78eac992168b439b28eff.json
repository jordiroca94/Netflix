{"ast":null,"code":"var _jsxFileName = \"/Users/jordirocasoler/Desktop/Ironhack - React/netflix/src/containers/browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Fuse from \"fuse.js\";\nimport { Card, Header, Loading, Player } from \"../components\";\nimport * as ROUTES from \"../constants/routes\";\nimport logo from \"../logo.svg\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { SelectProfileContainer } from \"./profiles\";\nimport { FooterContainer } from \"./footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BrowseContainer(_ref) {\n  _s();\n\n  let {\n    slides\n  } = _ref;\n  const [category, setCategory] = useState(\"series\");\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [slideRows, setSlideRows] = useState([]);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  useEffect(() => {\n    setSlideRows(slides[category]);\n  }, [slides, category]);\n  useEffect(() => {\n    const fuse = new Fuse(slideRows, {\n      keys: [\"data.description\", \"data.title\", \"data.genre\"]\n    });\n    const results = fuse.search(searchTerm).map(_ref2 => {\n      let {\n        item\n      } = _ref2;\n      return item;\n    });\n\n    if (slideRows.length > 0 && searchTerm.length > 3 && results.length > 0) {\n      setSlideRows(results);\n    } else {\n      setSlideRows(slides[category]);\n    }\n  }, [searchTerm]);\n  return profile.displayName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {\n      src: user.photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Loading.ReleaseBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      src: \"joker2\",\n      dontShowOnSmallViewPort: true,\n      children: [/*#__PURE__*/_jsxDEV(Header.Frame, {\n        children: [/*#__PURE__*/_jsxDEV(Header.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Header.Logo, {\n            to: ROUTES.HOME,\n            src: logo,\n            alt: \"Netflix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n            active: category === \"series\" ? \"true\" : \"false\",\n            onClick: () => setCategory(\"series\"),\n            children: \"Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n            active: category === \"films\" ? \"true\" : \"false\",\n            onClick: () => setCategory(\"films\"),\n            children: \"Films\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Header.Search, {\n            searchTerm: searchTerm,\n            setSearchTerm: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header.Profile, {\n            children: [/*#__PURE__*/_jsxDEV(Header.Picture, {\n              src: user.photoURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Header.Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Header.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Header.Picture, {\n                  src: user.photoURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n                  children: user.displayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Header.Group, {\n                children: /*#__PURE__*/_jsxDEV(Header.TextLink, {\n                  onClick: () => firebase.auth().signOut(),\n                  children: \"Sign out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Feature, {\n        children: [/*#__PURE__*/_jsxDEV(Header.FeatureCallOut, {\n          children: \"Watch Joker Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.Text, {\n          children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he's part of the world around him.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.PlayButton, {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      children: slideRows.map(slideItem => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: slideItem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Entities, {\n          children: slideItem.data.map(item => /*#__PURE__*/_jsxDEV(Card.Item, {\n            item: item,\n            children: [/*#__PURE__*/_jsxDEV(Card.Image, {\n              src: `/images/${category}/${item.genre}/${item.slug}/small.jpg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: [/*#__PURE__*/_jsxDEV(Card.SubTitle, {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, item.docId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Feature, {\n          category: category,\n          children: /*#__PURE__*/_jsxDEV(Player, {\n            children: [/*#__PURE__*/_jsxDEV(Player.Button, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Player.Video, {\n              src: \"/videos/bunny.mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, `${category}-${slideItem.title.toLowerCase()}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowseContainer, \"Tw2/5bKHI0Z48MTdAFfmsnBbU+E=\");\n\n_c = BrowseContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"sources":["/Users/jordirocasoler/Desktop/Ironhack - React/netflix/src/containers/browse.js"],"names":["React","useState","useEffect","useContext","Fuse","Card","Header","Loading","Player","ROUTES","logo","FirebaseContext","SelectProfileContainer","FooterContainer","BrowseContainer","slides","category","setCategory","profile","setProfile","loading","setLoading","searchTerm","setSearchTerm","slideRows","setSlideRows","firebase","user","auth","currentUser","setTimeout","displayName","fuse","keys","results","search","map","item","length","photoURL","HOME","signOut","slideItem","title","data","genre","slug","description","docId","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport Fuse from \"fuse.js\";\nimport { Card, Header, Loading, Player } from \"../components\";\nimport * as ROUTES from \"../constants/routes\";\nimport logo from \"../logo.svg\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { SelectProfileContainer } from \"./profiles\";\nimport { FooterContainer } from \"./footer\";\n\nexport function BrowseContainer({ slides }) {\n  const [category, setCategory] = useState(\"series\");\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [slideRows, setSlideRows] = useState([]);\n\n  const { firebase } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n\n  useEffect(() => {\n    setSlideRows(slides[category]);\n  }, [slides, category]);\n\n  useEffect(() => {\n    const fuse = new Fuse(slideRows, {\n      keys: [\"data.description\", \"data.title\", \"data.genre\"],\n    });\n    const results = fuse.search(searchTerm).map(({ item }) => item);\n\n    if (slideRows.length > 0 && searchTerm.length > 3 && results.length > 0) {\n      setSlideRows(results);\n    } else {\n      setSlideRows(slides[category]);\n    }\n  }, [searchTerm]);\n\n  return profile.displayName ? (\n    <>\n      {loading ? <Loading src={user.photoURL} /> : <Loading.ReleaseBody />}\n\n      <Header src=\"joker2\" dontShowOnSmallViewPort>\n        <Header.Frame>\n          <Header.Group>\n            <Header.Logo to={ROUTES.HOME} src={logo} alt=\"Netflix\" />\n            <Header.TextLink\n              active={category === \"series\" ? \"true\" : \"false\"}\n              onClick={() => setCategory(\"series\")}\n            >\n              Series\n            </Header.TextLink>\n            <Header.TextLink\n              active={category === \"films\" ? \"true\" : \"false\"}\n              onClick={() => setCategory(\"films\")}\n            >\n              Films\n            </Header.TextLink>\n          </Header.Group>\n          <Header.Group>\n            <Header.Search\n              searchTerm={searchTerm}\n              setSearchTerm={setSearchTerm}\n            />\n            <Header.Profile>\n              <Header.Picture src={user.photoURL} />\n              <Header.Dropdown>\n                <Header.Group>\n                  <Header.Picture src={user.photoURL} />\n                  <Header.TextLink>{user.displayName}</Header.TextLink>\n                </Header.Group>\n                <Header.Group>\n                  <Header.TextLink onClick={() => firebase.auth().signOut()}>\n                    Sign out\n                  </Header.TextLink>\n                </Header.Group>\n              </Header.Dropdown>\n            </Header.Profile>\n          </Header.Group>\n        </Header.Frame>\n\n        <Header.Feature>\n          <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n          <Header.Text>\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks\n            connection as he walks the streets of Gotham City. Arthur wears two\n            masks -- the one he paints for his day job as a clown, and the guise\n            he projects in a futile attempt to feel like he's part of the world\n            around him.\n          </Header.Text>\n          <Header.PlayButton>Play</Header.PlayButton>\n        </Header.Feature>\n      </Header>\n      <Card.Group>\n        {slideRows.map((slideItem) => (\n          <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\n            <Card.Title>{slideItem.title}</Card.Title>\n            <Card.Entities>\n              {slideItem.data.map((item) => (\n                <Card.Item key={item.docId} item={item}>\n                  <Card.Image src={`/images/${category}/${item.genre}/${item.slug}/small.jpg`} />\n                  <Card.Meta>\n                    <Card.SubTitle>{item.title}</Card.SubTitle>\n                    <Card.Text>{item.description}</Card.Text>\n                  </Card.Meta>\n                </Card.Item>\n              ))}\n            </Card.Entities>\n            <Card.Feature category={category}>\n              <Player>\n                <Player.Button />\n                <Player.Video src=\"/videos/bunny.mp4\" />\n              </Player>\n            </Card.Feature>\n          </Card>\n        ))}\n      </Card.Group>\n      <FooterContainer />\n    </>\n  ) : (\n    <SelectProfileContainer user={user} setProfile={setProfile} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}