{"ast":null,"code":"var _jsxFileName = \"/Users/jordirocasoler/Desktop/netflix/src/components/accordion/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from \"react\";\nimport { Container, Frame, Title, Item, Inner, Header, Body } from \"./styles/accordion\";\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function Accordion(_ref) {\n  let {\n    children,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Container, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Inner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, children));\n}\n_c = Accordion;\n\nAccordion.Title = function AccordionTitle(_ref2) {\n  let {\n    children,\n    ...restProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(Title, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nAccordion.Frame = function AccordionFrame(_ref3) {\n  let {\n    children,\n    ...restProps\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(Frame, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }), children);\n};\n\nAccordion.Item = _s(function AccordionItem(_ref4) {\n  _s();\n\n  let {\n    children,\n    ...restProps\n  } = _ref4;\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/React.createElement(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Item, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), children));\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\nAccordion.Header = _s2(function AccordionHeader(_ref5) {\n  _s2();\n\n  let {\n    children,\n    ...restProps\n  } = _ref5;\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/React.createElement(Header, Object.assign({\n    onClick: () => setToggleShow(toggleShow => !toggleShow)\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), children, /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, JSON.stringify), toggleShow ? /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/icons/close-slim-png\",\n    alt: \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/icons/add.png\",\n    alt: \"Open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }));\n}, \"TK/oZdgUDCvLrKWRR9mTHBf6KYY=\");\nAccordion.Body = _s3(function AccordionBody(_ref6) {\n  _s3();\n\n  let {\n    children,\n    ...restProps\n  } = _ref6;\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/React.createElement(Body, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }), children) : null;\n}, \"pnHGgxQ8cqAP7x/RK6BCBNHO5ug=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/jordirocasoler/Desktop/netflix/src/components/accordion/index.js"],"names":["React","useState","useContext","createContext","Container","Frame","Title","Item","Inner","Header","Body","ToggleContext","Accordion","children","restProps","AccordionTitle","AccordionFrame","AccordionItem","toggleShow","setToggleShow","AccordionHeader","JSON","stringify","AccordionBody"],"mappings":"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","sourcesContent":["import React, { useState, useContext, createContext } from \"react\";\nimport {Container, Frame,Title, Item, Inner, Header, Body } from \"./styles/accordion\";\n\nconst ToggleContext = createContext();\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container {...restProps}>\n      <Inner>{children}</Inner>\n    </Container>\n  );\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>;\n};\n\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>;\n};\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  const [toggleShow, setToggleShow] = useState(false);\n  return (\n    <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\n      <Item {...restProps}>{children}</Item>\n    </ToggleContext.Provider>\n  );\n};\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  const { toggleShow, setToggleShow } = useContext(ToggleContext);\n  return (\n    <Header\n      onClick={() => setToggleShow((toggleShow) => !toggleShow)}\n      {...restProps}\n    >\n      {children}\n      <pre>{JSON.stringify}</pre>\n      {toggleShow ? (\n          <img src=\"/images/icons/close-slim-png\" alt=\"Close\"/>\n      ):(\n          <img src=\"/images/icons/add.png\" alt=\"Open\"/>\n      )}\n    </Header>\n  );\n};\n\nAccordion.Body = function AccordionBody({children, ...restProps}){\n    const{toggleShow} = useContext(ToggleContext)\n    return toggleShow ? <Body {...restProps}>{children}</Body> : null;\n}"]},"metadata":{},"sourceType":"module"}